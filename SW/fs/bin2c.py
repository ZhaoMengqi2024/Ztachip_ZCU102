import re
import numpy as np
 
 
def bytes_to_c_arr(data):
	return [format(b, '#04x') for b in data]
 
 
def read_file(file_name):
	data = np.fromfile(file_name, dtype='uint8')
	data = bytearray(data)
	return data
 
 
def write_c_array(file_name, data):
	c_file = open("gen/"+ file_name + ".c", "w")
	c_file.write("/* THIS FILE IS GENERATED BY BIN2C.PY */ \n")
	static_content = "static const unsigned char " + file_name + "[" + str(len(data)) + "] ="
	array_content = "{{{}}}".format(",\n".join(bytes_to_c_arr(data)))
	final_content = static_content + array_content + ";"
#	final_content = re.sub("(.{72})", "\\1\n", final_content, 0, re.DOTALL)
	c_file.write(final_content)
 
raw_data = read_file("optical_flow_1_in.bin")
write_c_array("optical_flow_1_in", raw_data)

raw_data = read_file("optical_flow_2_in.bin")
write_c_array("optical_flow_2_in", raw_data)

raw_data = read_file("optical_flow_It.bin")
write_c_array("optical_flow_It", raw_data)

raw_data = read_file("optical_flow_Ix.bin")
write_c_array("optical_flow_Ix", raw_data)

raw_data = read_file("optical_flow_Iy.bin")
write_c_array("optical_flow_Iy", raw_data)

raw_data = read_file("optical_flow_vx.bin")
write_c_array("optical_flow_vx", raw_data)

raw_data = read_file("optical_flow_vy.bin")
write_c_array("optical_flow_vy", raw_data)

raw_data = read_file("color_conversion_100_100_in.bin")
write_c_array("color_conversion_100_100_in", raw_data)

raw_data = read_file("color_conversion_monochrome_100_100_out.bin")
write_c_array("color_conversion_monochrome_100_100_out", raw_data)

raw_data = read_file("color_conversion_bgr_interleave_100_100_out.bin")
write_c_array("color_conversion_bgr_interleave_100_100_out", raw_data)

raw_data = read_file("color_conversion_rgb_interleave_100_100_out.bin")
write_c_array("color_conversion_rgb_interleave_100_100_out", raw_data)

raw_data = read_file("color_conversion_bgr_split_100_100_out.bin")
write_c_array("color_conversion_bgr_split_100_100_out", raw_data)

raw_data = read_file("color_conversion_rgb_split_100_100_out.bin")
write_c_array("color_conversion_rgb_split_100_100_out", raw_data)

raw_data = read_file("canny_200_in.bin")
write_c_array("canny_200_in", raw_data)

raw_data = read_file("canny_final_out.bin")
write_c_array("canny_final_out", raw_data)

raw_data = read_file("canny_magnitude_out.bin")
write_c_array("canny_magnitude_out", raw_data)

raw_data = read_file("canny_phase_out.bin")
write_c_array("canny_phase_out", raw_data)

raw_data = read_file("canny_200_out.bin")
write_c_array("canny_200_out", raw_data)

raw_data = read_file("canny_maxima_out.bin")
write_c_array("canny_maxima_out", raw_data)

raw_data = read_file("harris_corner_200_in.bin")
write_c_array("harris_corner_200_in", raw_data)

raw_data = read_file("harris_after_suppression.bin")
write_c_array("harris_after_suppression", raw_data)

raw_data = read_file("resize_248_140.bmp")
write_c_array("resize_248_140", raw_data)

raw_data = read_file("resize_320_172.bmp")
write_c_array("resize_320_172", raw_data)

raw_data = read_file("resize_400_180.bmp")
write_c_array("resize_400_180", raw_data)

raw_data = read_file("resize_560_200.bmp")
write_c_array("resize_560_200", raw_data)

raw_data = read_file("resize_660_256.bmp")
write_c_array("resize_660_256", raw_data)

raw_data = read_file("resize_768_300.bmp")
write_c_array("resize_768_300", raw_data)

raw_data = read_file("resize_800_400.bmp")
write_c_array("resize_800_400", raw_data)

raw_data = read_file("resize.bmp")
write_c_array("resize", raw_data)

raw_data = read_file("gaussian_200_in.bin")
write_c_array("gaussian_200_in", raw_data)

raw_data = read_file("gaussian_200_out.bin")
write_c_array("gaussian_200_out", raw_data)

raw_data = read_file("histogram_in.bin")
write_c_array("histogram_in", raw_data)

raw_data = read_file("histogram_out.bin")
write_c_array("histogram_out", raw_data)

raw_data = read_file("mobilenet_v2_1_0_224_quant.tflite")
write_c_array("mobilenet_v2_1_0_224_quant", raw_data)

raw_data = read_file("classifier.bin")
write_c_array("classifier", raw_data)

raw_data = read_file("classifier_input.bmp")
write_c_array("classifier_input", raw_data)

raw_data = read_file("ssd_input.bmp")
write_c_array("ssd_input", raw_data)

raw_data = read_file("detect.tflite")
write_c_array("detect", raw_data)

raw_data = read_file("detect_boxes.bin")
write_c_array("detect_boxes", raw_data)

raw_data = read_file("detect_classes.bin")
write_c_array("detect_classes", raw_data)

raw_data = read_file("labels_mobilenet_quant_v1_224.txt")
write_c_array("labels_mobilenet_quant_v1_224", raw_data)

raw_data = read_file("labelmap.txt")
write_c_array("labelmap", raw_data)

raw_data = read_file("alphabet.bmp")
write_c_array("alphabet", raw_data)

raw_data = read_file("alphabet2.bmp")
write_c_array("alphabet2", raw_data)
